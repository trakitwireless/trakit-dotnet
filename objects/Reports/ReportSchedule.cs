using System;
using System.Collections.Generic;

namespace trakit.objects {
	/// <summary>
	/// Specifies how often a Report Template is automatically generates a Report Result.
	/// </summary>
	/// <category>Reports</category>
	public enum ReportRecurrenceType : byte {
		/// <summary>
		/// Runs only once.  This type is used for large reports which need to run overnight.
		/// </summary>
		once,
		/// <summary>
		/// Daily at midnight in the local timezone for the previous day based on the ReportRecurrence.weekdays.
		/// </summary>
		/// <seealso cref="ReportRecurrence.weekdays" />
		daily,
		/// <summary>
		/// Weekly at midnight in the local timezone for the previous 7 days based on the ReportRecurrence.weekday.
		/// </summary>
		/// <seealso cref="ReportRecurrence.weekday" />
		weekly,
		/// <summary>
		/// Monthly at midnight in the local timezone for the previous month based on the ReportRecurrence.start date.
		/// </summary>
		/// <seealso cref="ReportRecurrence.start" />
		monthly,
		/// <summary>
		/// Runs once every three months at midnight in the local timezone for the previous 3 months based on the ReportRecurrence.start date.
		/// </summary>
		/// <seealso cref="ReportRecurrence.start" />
		quarterly,
		/// <summary>
		/// Yearly at midnight in the local timezone based on the ReportRecurrence.start date.
		/// </summary>
		/// <seealso cref="ReportRecurrence.start" />
		annually,
	}

	/// <summary>
	/// Determines when and how often a report schedule runs automatically.
	/// </summary>
	/// <category>Reports</category>
	public class ReportSchedule : Subscribable, IIdUlong, INamed, IEnabled, IBelongCompany {
		/// <summary>
		/// Unique identifier
		/// </summary>
		public ulong id { get; set; }
		/// <summary>
		/// The company to which this report belongs
		/// </summary>
		/// <seealso cref="Company.id" />
		public ulong company { get; set; }
		/// <summary>
		/// A reference to the Template used to create this result.
		/// </summary>
		/// <seealso cref="ReportTemplate.id" />
		public ulong template;
		/// <summary>
		/// Login of the user who has ownership of this report schedule.
		/// </summary>
		/// <seealso cref="User.login" />
		/// <override max-length="254" format="email" />
		public string owner;
		/// <summary>
		/// Name of this report.
		/// </summary>
		/// <override max-length="100" />
		public string name { get; set; }
		/// <summary>
		/// Notes about this report.
		/// </summary>
		public string notes { get; set; }
		/// <summary>
		/// Indicates whether this schedule is allowed to run.
		/// </summary>
		public bool enabled { get; set; }
		/// <summary>
		/// The recurring schedule to generate report results.
		/// </summary>
		public ReportRecurrence repetition;
		/// <summary>
		/// Specified parameters for the report logic, targeted Assets, and filtering Places.
		/// </summary>
		public ReportOptions options;
		/// <summary>
		/// A list of users and a targeting expression for assets which receive report results notifications.
		/// </summary>
		public ReportNotifications notify;
	}

	/// <summary>
	/// Determines when and how often a report schedule runs automatically.
	/// </summary>
	/// <category>Reports</category>
	public class ReportRecurrence {
		/// <summary>
		/// How often the report is automatically run.  Daily, weekly, monthly, etc...
		/// </summary>
		public ReportRecurrenceType kind;
		/// <summary>
		/// Used only for daily schedules, this 7 item, boolean array, determines if the schedule should recur on that day of the week.
		/// </summary>
		/// <override count="7" />
		public bool[]? weekdays;
		/// <summary>
		/// Used only for weekly schedules, it's a number between 0 and 6 representing the day of the week, with Sunday being the first day of the week.
		/// </summary>
		public byte? weekday;
		/// <summary>
		/// The local timezone used to calculate recurring date/time ranges.
		/// </summary>
		/// <seealso cref="Timezone.code" />
		/// <override type="System.String" format="codified" />
		[Obsolete("Use owner.timezone instead")]
		public TimeZoneInfo timezone;
		/// <summary>
		/// When the schedule is to begin recurring in local-time (not UTC).
		/// </summary>
		public DateTime start;
		/// <summary>
		/// The optional time when the schedule stops recurring in local-time (not UTC).
		/// </summary>
		public DateTime? end;

		// keeping track of progress
		/// <summary>
		/// The number of times this schedule has been invoked to generate results.
		/// </summary>
		/// <override readonly="true" />
		public ushort iterations;
		/// <summary>
		/// The unique identifier of the last ReportResult generated by this schedule.
		/// </summary>
		/// <override readonly="true" />
		public ulong? lastResult;
		/// <summary>
		/// This date/time is used as the startDate ReportParameter for the next iteration of this recurring report.
		/// This value is null when the schedule is calculated to stop recurring.
		/// </summary>
		/// <override readonly="true" />
		public DateTime? nextStartDate;
		/// <summary>
		/// This date/time is used as the endDate ReportParameter for the next iteration of this recurring report.
		/// This value is null when the schedule is calculated to stop recurring.
		/// </summary>
		/// <override readonly="true" />
		public DateTime? nextEndDate;
		/// <summary>
		/// The date/time stamp from the last result used to inform the nextStartDate and nextEndDate properties.
		/// This value is null when the schedule has not yet run once.
		/// </summary>
		/// <override readonly="true" />
		public DateTime? lastStartDate;
		/// <summary>
		/// The date/time stamp from the last result used to inform the nextStartDate and nextEndDate properties.
		/// This value is null when the schedule has not yet run once.
		/// </summary>
		/// <override readonly="true" />
		public DateTime? lastEndDate;
	}
	/// <summary>
	/// A group of users and targeted assets which receive report notifications.
	/// </summary>
	/// <category>Reports</category>
	public class ReportNotifications {
		/// <summary>
		/// List of users to send emailed report.
		/// Each email will only contain the results for the assets each user is allowed to view.
		/// </summary>
		/// <override>
		/// <values max-length="50" format="email">
		/// <seealso cref="UserGeneral.login" />
		/// </values>
		/// </override>
		public List<string> users;
		/// <summary>
		/// A targeting expression to identify which assets receive the report results.
		/// The results emailed to each asset will only be for themselves, not all assets.
		/// To receive the emailed results, the Asset must have a <see cref="AssetGeneral.messagingAddress"/>,
		/// or for a Person type asset, their <see cref="Contact.emails"/>["Email"].
		/// </summary>
		public string assets;
	}
}